


# .abs__InterruptVectorTable
  00000000 0000019C .abs    InterruptVectorTable	(Vectors_c.obj)

# .abs_NVPROT_INIT
  0000040D 00000001 .abs    NVPROT_INIT	(Cpu_c.obj)

# .abs_NVOPT_INIT
  0000040F 00000001 .abs    NVOPT_INIT	(Cpu_c.obj)
#>00000400          ___heap_size (linker command file)
#>00000400          ___stack_size (linker command file)
#>00800000          ___RAM_ADDRESS (linker command file)
#>00002000          ___RAM_SIZE (linker command file)
#>00000000          ___FLASH_ADDRESS (linker command file)
#>00020000          ___FLASH_SIZE (linker command file)

# .userram

# .code

# .text
  00000410 000000D4 .text   SerialCom_RecvChar	(SerialCom_c.obj)
  000004E4 00000092 .text   SerialCom_RecvBlock	(SerialCom_c.obj)
  00000576 00000138 .text   SerialCom_SendBlock	(SerialCom_c.obj)
  000006AE 0000006A .text   SerialCom_ClearRxBuf	(SerialCom_c.obj)
  00000718 000000B4 .text   SerialCom_InterruptRx	(SerialCom_c.obj)
  000007CC 000000BE .text   SerialCom_InterruptTx	(SerialCom_c.obj)
  0000088A 00000020 .text   SerialCom_InterruptError	(SerialCom_c.obj)
  000008AA 00000074 .text   SerialCom_Init	(SerialCom_c.obj)
  0000091E 0000008C .text   S_Wire_InterruptRx	(S_Wire_c.obj)
  000009AA 00000052 .text   S_Wire_InterruptTx	(S_Wire_c.obj)
  000009FC 00000030 .text   S_Wire_InterruptError	(S_Wire_c.obj)
  00000A2C 00000054 .text   S_Wire_Init	(S_Wire_c.obj)
  00000A80 00000030 .text   SetRatio	(S_TiltCamera_c.obj)
  00000AB0 0000004E .text   S_TiltCamera_SetDutyUS	(S_TiltCamera_c.obj)
  00000AFE 00000012 .text   S_TiltCamera_Init	(S_TiltCamera_c.obj)
  00000B10 00000030 .text   SetRatio	(S_PanCamera_c.obj)
  00000B40 0000004E .text   S_PanCamera_SetDutyUS	(S_PanCamera_c.obj)
  00000B8E 00000012 .text   S_PanCamera_Init	(S_PanCamera_c.obj)
  00000BA0 00000022 .text   RESET_INTERRUPT_Interrupt	(RESET_INTERRUPT_c.obj)
  00000BC2 000000F4 .text   PE_Timer_LngMul	(PE_Timer_c.obj)
  00000CB6 00000086 .text   PE_Timer_LngHi3	(PE_Timer_c.obj)
  00000D3C 00000030 .text   SetRatio	(M4_ESC_c.obj)
  00000D6C 0000000A .text   M4_ESC_Enable	(M4_ESC_c.obj)
  00000D76 0000001C .text   M4_ESC_SetRatio8	(M4_ESC_c.obj)
  00000D92 00000014 .text   M4_ESC_SetRatio16	(M4_ESC_c.obj)
  00000DA6 00000020 .text   M4_ESC_Init	(M4_ESC_c.obj)
  00000DC6 00000030 .text   SetRatio	(M3_ESC_c.obj)
  00000DF6 0000000A .text   M3_ESC_Enable	(M3_ESC_c.obj)
  00000E00 0000001C .text   M3_ESC_SetRatio8	(M3_ESC_c.obj)
  00000E1C 00000014 .text   M3_ESC_SetRatio16	(M3_ESC_c.obj)
  00000E30 00000012 .text   M3_ESC_Init	(M3_ESC_c.obj)
  00000E42 00000030 .text   SetRatio	(M2_ESC_c.obj)
  00000E72 0000000A .text   M2_ESC_Enable	(M2_ESC_c.obj)
  00000E7C 0000001C .text   M2_ESC_SetRatio8	(M2_ESC_c.obj)
  00000E98 00000014 .text   M2_ESC_SetRatio16	(M2_ESC_c.obj)
  00000EAC 00000012 .text   M2_ESC_Init	(M2_ESC_c.obj)
  00000EBE 00000030 .text   SetRatio	(M1_ESC_c.obj)
  00000EEE 0000000A .text   M1_ESC_Enable	(M1_ESC_c.obj)
  00000EF8 0000001C .text   M1_ESC_SetRatio8	(M1_ESC_c.obj)
  00000F14 00000014 .text   M1_ESC_SetRatio16	(M1_ESC_c.obj)
  00000F28 00000020 .text   M1_ESC_Init	(M1_ESC_c.obj)
  00000F48 00000030 .text   SetRatio	(LedLight2_c.obj)
  00000F78 0000001C .text   LedLight2_SetRatio8	(LedLight2_c.obj)
  00000F94 00000012 .text   LedLight2_Init	(LedLight2_c.obj)
  00000FA6 00000030 .text   SetRatio	(LedLight1_c.obj)
  00000FD6 0000001C .text   LedLight1_SetRatio8	(LedLight1_c.obj)
  00000FF2 00000020 .text   LedLight1_Init	(LedLight1_c.obj)
  00001012 00000260 .text   MainComm	(I2C_c.obj)
  00001272 00000048 .text   I2C_SendChar	(I2C_c.obj)
  000012BA 000000AC .text   I2C_SendBlock	(I2C_c.obj)
  00001366 000000AE .text   I2C_RecvBlock	(I2C_c.obj)
  00001414 00000028 .text   I2C_SelectSlave	(I2C_c.obj)
  0000143C 00000026 .text   I2C_Init	(I2C_c.obj)
  00001462 00000002 .text   Cpu_Interrupt	(Cpu_c.obj)
  00001464 0000001C .text   Cpu_Delay100US	(Cpu_c.obj)
  00001480 00000088 .text   __initialize_hardware	(Cpu_c.obj)
  00001508 00000214 .text   PE_low_level_init	(Cpu_c.obj)
  0000171C 0000001C .text   HWEnDi	(Aux_Int_c.obj)
  00001738 00000020 .text   Aux_Int_Init	(Aux_Int_c.obj)
  00001758 00000022 .text   Aux_Int_Interrupt	(Aux_Int_c.obj)
  0000177A 000000BA .text   ADC_Interrupt	(ADC_c.obj)
  00001834 00000026 .text   ClrSumV	(ADC_c.obj)
  0000185A 0000005C .text   ADC_HWEnDi	(ADC_c.obj)
  000018B6 0000002A .text   ADC_Measure	(ADC_c.obj)
  000018E0 00000042 .text   ADC_GetChanValue8	(ADC_c.obj)
  00001922 00000042 .text   ADC_GetChanValue16	(ADC_c.obj)
  00001964 00000020 .text   ADC_Init	(ADC_c.obj)
  00001984 00000002 .text   __initialize_system	(startcf_c.obj)
  00001986 00000062 .text   __copy_rom_section	(startcf_c.obj)
  000019E8 00000046 .text   __copy_rom_sections_to_ram	(startcf_c.obj)
  00001A2E 00000004 .text   _ExitProcess	(startcf_c.obj)
  00001A32 00000210 .text   clear_mem	(startcf_c.obj)
  00001C42 00000090 .text   _startup	(startcf_c.obj)
  00001CD2 00000008 .text   sMCU_OK_W	(xSub_c.obj)
  00001CDA 00000008 .text   sMCU_OK_NW	(xSub_c.obj)
  00001CE2 00000008 .text   sPC_OK_W	(xSub_c.obj)
  00001CEA 00000008 .text   sPC_OK_NW	(xSub_c.obj)
  00001CF2 00000094 .text   initMxSub	(xSub_c.obj)
  00001D86 00000098 .text   setMotorSpeed256	(xSub_c.obj)
  00001E1E 0000003E .text   servoPanAngle	(xSub_c.obj)
  00001E5C 0000003E .text   servoTiltAngle	(xSub_c.obj)
  00001E9A 0000003E .text   map	(xSub_c.obj)
  00001ED8 0000003C .text   writeRegisterI2C	(xSub_c.obj)
  00001F14 0000005E .text   initMPU	(xSub_c.obj)
  00001F72 000000A6 .text   dataMPU	(xSub_c.obj)
  00002018 00000018 .text   initHMC6352	(xSub_c.obj)
  00002030 00000042 .text   dataHMC6352	(xSub_c.obj)
  00002072 00000018 .text   envioData	(xSub_c.obj)
  0000208A 000000A4 .text   initVFisicas	(xSub_c.obj)
  0000212E 000000DA .text   vFisicas2Array	(xSub_c.obj)
  00002208 000000C2 .text   initxSub	(xSub_c.obj)
  000022CA 00000052 .text   getDataAll	(xSub_c.obj)
  0000231C 00000052 .text   main	(main_c.obj)
  0000236E 00000074 .text   Aux_Int_OnInterrupt	(Events_c.obj)
  000023E2 00000002 .text   SerialCom_OnRxChar	(Events_c.obj)
  000023E4 00000002 .text   SerialCom_OnTxChar	(Events_c.obj)
  000023E6 00000002 .text   RESET_INTERRUPT_OnInterrupt	(Events_c.obj)
  000023E8 00000002 .text   ADC_OnEnd	(Events_c.obj)
  000023EA 00000074 .text   SerialCom_OnFullRxBuf	(Events_c.obj)
  0000245E 00000002 .text   SerialCom_OnFreeTxBuf	(Events_c.obj)
  00002460 00000002 .text   S_Wire_OnError	(Events_c.obj)
  00002462 00000002 .text   S_Wire_OnRxChar	(Events_c.obj)
  00002464 00000002 .text   S_Wire_OnTxChar	(Events_c.obj)
  00002466 0000000C .text   _ewl_exit	(librt.a abort_exit.o   )
  00002472 0000001C .text   __call_static_initializers	(librt.a cf_staticinitia)
  0000248E 0000002C .text   __destroy_global_chain	(librt.a cf_staticinitia)
  000024BA 0000003E .text   __ldivu__	(librt.a cf_runtime.o   )
  000024F8 00000034 .text   __ldiv__	(librt.a cf_runtime.o   )
  0000252C 00000006 .rodata Table	(ADC_c.obj)
  00002532 00000006 .rodata Channels	(ADC_c.obj)
#>00002538          ___ROM_AT (linker command file)
#>00002538          ___DATA_ROM (linker command file)

# .data
#>00800000          ___DATA_RAM (linker command file)
#>00800000          __exception_table_start__ (linker command file)
# Exception index
  00800000 00000000         Exception Table Index	()
#>00800000          __exception_table_end__ (linker command file)
#>00800000          ___sinit__ (linker command file)
# Linker generated symbols
  00800000 00000004         static initializer	(linker generated)
#>00800004          __START_DATA (linker command file)
#>00800004          __END_DATA (linker command file)
#>00800004          __START_SDATA (linker command file)
  00800004 00000001 .sdata  MPU6050_ACCEL_CONFIG	(Init_c.obj)
  00800005 00000001 .sdata  MPU6050_AFS_SEL_4G	(Init_c.obj)
  00800006 00000001 .sdata  MPU6050_GYRO_CONFIG	(Init_c.obj)
  00800007 00000001 .sdata  MPU6050_FS_SEL_1000	(Init_c.obj)
  00800008 00000001 .sdata  MPU	(Init_c.obj)
  00800009 00000001 .sdata  HMC6352	(Init_c.obj)
  0080000A 00000002 .sdata  CENTERDC	(Init_c.obj)
  0080000C 00000002 .sdata  MAXFORWARD	(Init_c.obj)
  0080000E 00000002 .sdata  MAXBACKWARD	(Init_c.obj)
  00800010 00000002 .sdata  MINSERVOUS	(Init_c.obj)
  00800012 00000002 .sdata  MAXSERVOUS	(Init_c.obj)
  00800014 00000001 .sdata  SIZEPACKAGE	(Init_c.obj)
#>00800018          __END_SDATA (linker command file)
#>00800018          ___DATA_END (linker command file)
#>00800018          __SDA_BASE (linker command file)

# .bss
#>00800018          ___BSS_START (linker command file)
#>00800018          __START_SBSS (linker command file)
  00800018 00000001 .sbss   OnFreeTxBuf_semaphore	(SerialCom_c.obj)
  00800019 0000001B .sbss   OutBuffer	(SerialCom_c.obj)
  00800034 00000001 .sbss   OutIndxW	(SerialCom_c.obj)
  00800035 00000001 .sbss   OutIndxR	(SerialCom_c.obj)
  00800036 00000001 .sbss   SerialCom_OutLen	(SerialCom_c.obj)
  00800037 0000000A .sbss   InpBuffer	(SerialCom_c.obj)
  00800041 00000001 .sbss   InpIndxW	(SerialCom_c.obj)
  00800042 00000001 .sbss   InpIndxR	(SerialCom_c.obj)
  00800043 00000001 .sbss   SerialCom_InpLen	(SerialCom_c.obj)
  00800044 00000001 .sbss   EnUser	(SerialCom_c.obj)
  00800045 00000001 .sbss   SerFlag	(SerialCom_c.obj)
  00800046 00000001 .sbss   DivHighL	(S_Wire_c.obj)
  00800047 00000001 .sbss   DivHighH	(S_Wire_c.obj)
  00800048 00000001 .sbss   BufferRead	(S_Wire_c.obj)
  00800049 00000001 .sbss   SerFlag	(S_Wire_c.obj)
  0080004A 00000002 .sbss   ActualRatio	(S_TiltCamera_c.obj)
  0080004C 00000002 .sbss   ActualRatio	(S_PanCamera_c.obj)
  0080004E 00000002 .sbss   ActualRatio	(M4_ESC_c.obj)
  00800050 00000002 .sbss   ActualRatio	(M3_ESC_c.obj)
  00800052 00000002 .sbss   ActualRatio	(M2_ESC_c.obj)
  00800054 00000002 .sbss   ActualRatio	(M1_ESC_c.obj)
  00800056 00000002 .sbss   ActualRatio	(LedLight2_c.obj)
  00800058 00000002 .sbss   ActualRatio	(LedLight1_c.obj)
  0080005A 00000001 .sbss   I2C_SerFlag	(I2C_c.obj)
  0080005B 00000001 .sbss   ChrTemp	(I2C_c.obj)
  0080005C 00000004 .sbss   PtrSndRcv	(I2C_c.obj)
  00800060 00000002 .sbss   I2C_SndRcvTemp	(I2C_c.obj)
  00800064 00000004 .sbss   OutPtrM	(I2C_c.obj)
  00800068 00000002 .sbss   OutLenM	(I2C_c.obj)
  0080006C 00000004 .sbss   InpPtrM	(I2C_c.obj)
  00800070 00000002 .sbss   InpLenM	(I2C_c.obj)
  00800072 00000001 .sbss   I2C_SlaveAddr	(I2C_c.obj)
  00800073 00000001 .sbss   SR_lock	(Cpu_c.obj)
  00800074 00000001 .sbss   EnUser	(Aux_Int_c.obj)
  00800076 0000000C .sbss   ADC_OutV	(ADC_c.obj)
  00800082 00000001 .sbss   ModeFlg	(ADC_c.obj)
  00800083 00000001 .sbss   SumChan	(ADC_c.obj)
  00800084 00000001 .sbss   OutFlg	(ADC_c.obj)
  00800085 00000002 .sbss   finTrama	(Init_c.obj)
  00800087 00000002 .sbss   XOR	(Init_c.obj)
  00800089 00000002 .sbss   cargaBaterias	(Init_c.obj)
  0080008B 00000002 .sbss   presenciaAgua	(Init_c.obj)
  0080008E 00000006 .sbss   angBrujula	(Init_c.obj)
  00800094 00000006 .sbss   velLineal	(Init_c.obj)
  0080009A 00000006 .sbss   velAngularZ	(Init_c.obj)
  008000A0 00000006 .sbss   velAngularY	(Init_c.obj)
  008000A6 00000006 .sbss   velAngularX	(Init_c.obj)
  008000AC 00000006 .sbss   aceleracionZ	(Init_c.obj)
  008000B2 00000006 .sbss   aceleracionY	(Init_c.obj)
  008000B8 00000006 .sbss   aceleracionX	(Init_c.obj)
  008000BE 00000006 .sbss   presExterna	(Init_c.obj)
  008000C4 00000006 .sbss   tempInterna	(Init_c.obj)
  008000CA 00000006 .sbss   tempExterna	(Init_c.obj)
  008000D0 00000002 .sbss   STATUS	(Init_c.obj)
  008000D2 00000002 .sbss   err	(Events_c.obj)
  008000D4 00000001 .sbss   led0x00	(Events_c.obj)
  008000D5 00000001 .sbss   led0x01	(Events_c.obj)
  008000D6 00000001 .sbss   led0x02	(Events_c.obj)
  008000D7 00000001 .sbss   tLed	(Events_c.obj)
  008000D8 00000001 .sbss   tMotor	(Events_c.obj)
  008000D9 00000001 .sbss   STATUS_PC	(Events_c.obj)
  008000DA 0000000A .sbss   dataInPC	(Events_c.obj)
  008000E4 0000001B .sbss   data	(Events_c.obj)
#>00800100          __END_SBSS (linker command file)
#>00800100          __START_BSS (linker command file)
  00800100 00000002 .bss    SR_reg	(Cpu_c.obj)
  00800104 00000004 .bss    __global_destructor_chain	(librt.a cf_staticinitia)
#>00800108          __END_BSS (linker command file)
#>00800108          ___BSS_END (linker command file)

# .custom
#>00800108          ___HEAP_START (linker command file)
#>00800108          ___heap_addr (linker command file)
#>00800508          ___HEAP_END (linker command file)
#>00800508          ___SP_END (linker command file)
#>00800908          ___SP_INIT (linker command file)
#>00800508          ___mem_limit (linker command file)
#>00000010          ___stack_safety (linker command file)
#>00800908          __SP_INIT (linker command file)
#>00800908          ___SP_AFTER_RESET (linker command file)
#>00002550          _romp_at (linker command file)

# .romp
#>00002550          __S_romp (linker command file)


# Memory map:
  v_addr   p_addr   size     name
  00000000 00000000 0000019C .abs__InterruptVectorTable abs__InterruptVectorTable
  0000040D 0000040D 00000001 .abs_NVPROT_INIT abs_NVPROT_INIT
  0000040F 0000040F 00000001 .abs_NVOPT_INIT abs_NVOPT_INIT
  00000410 00000410 00000000 .code      code
  00000410 00000410 00002128 .text      code
  00800000 00800000 00000000 .userram   userram
  00800000 00002538 00000018 .data      userram
  00800018 00800018 000000F0 .bss       userram
  00800108 00800108 00000000 .custom    userram
  00800108 00002550 00000018 .romp      userram

# Link start time: Tue Jan 26 16:30:06 2016
# Link end time: Tue Jan 26 16:30:06 2016
