


# .abs__InterruptVectorTable
  00000000 0000019C .abs    InterruptVectorTable	(Vectors_c.obj)

# .abs_NVPROT_INIT
  0000040D 00000001 .abs    NVPROT_INIT	(Cpu_c.obj)

# .abs_NVOPT_INIT
  0000040F 00000001 .abs    NVOPT_INIT	(Cpu_c.obj)
#>00000400          ___heap_size (linker command file)
#>00000400          ___stack_size (linker command file)
#>00800000          ___RAM_ADDRESS (linker command file)
#>00002000          ___RAM_SIZE (linker command file)
#>00000000          ___FLASH_ADDRESS (linker command file)
#>00020000          ___FLASH_SIZE (linker command file)

# .userram

# .code

# .text
  00000410 00000020 .text   SetPV	(testMotor_c.obj)
  00000430 00000028 .text   HWEnDi	(testMotor_c.obj)
  00000458 00000032 .text   testMotor_Init	(testMotor_c.obj)
  0000048A 00000028 .text   testMotor_Interrupt	(testMotor_c.obj)
  000004B2 00000070 .text   SerialCom_InterruptRx	(SerialCom_c.obj)
  00000522 00000052 .text   SerialCom_InterruptTx	(SerialCom_c.obj)
  00000574 00000020 .text   SerialCom_InterruptError	(SerialCom_c.obj)
  00000594 0000004A .text   SerialCom_Init	(SerialCom_c.obj)
  000005DE 00000030 .text   SetRatio	(S_TiltCamera_c.obj)
  0000060E 00000012 .text   S_TiltCamera_Init	(S_TiltCamera_c.obj)
  00000620 00000030 .text   SetRatio	(S_PanCamera_c.obj)
  00000650 00000012 .text   S_PanCamera_Init	(S_PanCamera_c.obj)
  00000662 00000022 .text   RESET_INTERRUPT_Interrupt	(RESET_INTERRUPT_c.obj)
  00000684 00000030 .text   SetRatio	(M4_ESC_c.obj)
  000006B4 0000000A .text   M4_ESC_Enable	(M4_ESC_c.obj)
  000006BE 00000014 .text   M4_ESC_SetRatio16	(M4_ESC_c.obj)
  000006D2 00000020 .text   M4_ESC_Init	(M4_ESC_c.obj)
  000006F2 00000030 .text   SetRatio	(M3_ESC_c.obj)
  00000722 0000000A .text   M3_ESC_Enable	(M3_ESC_c.obj)
  0000072C 00000014 .text   M3_ESC_SetRatio16	(M3_ESC_c.obj)
  00000740 00000012 .text   M3_ESC_Init	(M3_ESC_c.obj)
  00000752 00000030 .text   SetRatio	(M2_ESC_c.obj)
  00000782 0000000A .text   M2_ESC_Enable	(M2_ESC_c.obj)
  0000078C 00000014 .text   M2_ESC_SetRatio16	(M2_ESC_c.obj)
  000007A0 00000020 .text   M2_ESC_Init	(M2_ESC_c.obj)
  000007C0 00000002 .text   Cpu_Interrupt	(Cpu_c.obj)
  000007C4 0000001C .text   Cpu_Delay100US	(Cpu_c.obj)
  000007E0 00000088 .text   __initialize_hardware	(Cpu_c.obj)
  00000868 00000194 .text   PE_low_level_init	(Cpu_c.obj)
  000009FC 0000001C .text   Aux_Int_Init	(Aux_Int_c.obj)
  00000A18 00000022 .text   Aux_Int_Interrupt	(Aux_Int_c.obj)
  00000A3A 00000032 .text   ADC_Interrupt	(ADC_c.obj)
  00000A6C 00000014 .text   ADC_HWEnDi	(ADC_c.obj)
  00000A80 0000002A .text   ADC_Measure	(ADC_c.obj)
  00000AAA 0000001E .text   ADC_GetValue16	(ADC_c.obj)
  00000AC8 00000020 .text   ADC_Init	(ADC_c.obj)
  00000AE8 00000002 .text   __initialize_system	(startcf_c.obj)
  00000AEA 00000062 .text   __copy_rom_section	(startcf_c.obj)
  00000B4C 00000046 .text   __copy_rom_sections_to_ram	(startcf_c.obj)
  00000B92 00000004 .text   _ExitProcess	(startcf_c.obj)
  00000B96 00000210 .text   clear_mem	(startcf_c.obj)
  00000DA6 00000090 .text   _startup	(startcf_c.obj)
  00000E36 00000008 .text   sMCU_OK_W	(xSub_c.obj)
  00000E3E 00000008 .text   sCom_In_W	(xSub_c.obj)
  00000E46 00000008 .text   sPC_OK_NW	(xSub_c.obj)
  00000E4E 00000018 .text   delay	(xSub_c.obj)
  00000E66 00000048 .text   initMxSub	(xSub_c.obj)
  00000EAE 0000001A .text   setDC	(xSub_c.obj)
  00000EC8 0000003E .text   map	(xSub_c.obj)
  00000F06 00000092 .text   main	(main_c.obj)
  00000F98 00000070 .text   Aux_Int_OnInterrupt	(Events_c.obj)
  00001008 00000002 .text   SerialCom_OnRxChar	(Events_c.obj)
  0000100A 00000002 .text   SerialCom_OnTxChar	(Events_c.obj)
  0000100C 00000002 .text   testMotor_OnEnd	(Events_c.obj)
  0000100E 00000002 .text   RESET_INTERRUPT_OnInterrupt	(Events_c.obj)
  00001010 00000002 .text   ADC_OnEnd	(Events_c.obj)
  00001012 0000001C .text   __call_static_initializers	(librt.a cf_staticinitia)
  0000102E 0000002C .text   __destroy_global_chain	(librt.a cf_staticinitia)
  0000105A 0000003E .text   __ldivu__	(librt.a cf_runtime.o   )
  00001098 00000034 .text   __ldiv__	(librt.a cf_runtime.o   )
  000010CC 0000000C .text   _ewl_exit	(librt.a abort_exit.o   )
#>000010D8          ___ROM_AT (linker command file)
#>000010D8          ___DATA_ROM (linker command file)

# .data
#>00800000          ___DATA_RAM (linker command file)
#>00800000          __exception_table_start__ (linker command file)
# Exception index
  00800000 00000000         Exception Table Index	()
#>00800000          __exception_table_end__ (linker command file)
#>00800000          ___sinit__ (linker command file)
# Linker generated symbols
  00800000 00000004         static initializer	(linker generated)
#>00800004          __START_DATA (linker command file)
#>00800004          __END_DATA (linker command file)
#>00800004          __START_SDATA (linker command file)
  00800004 00000002 .sdata  CENTERDC	(Init_c.obj)
  00800006 00000002 .sdata  MAXFORWARD	(Init_c.obj)
  00800008 00000002 .sdata  MAXBACKWARD	(Init_c.obj)
#>0080000C          __END_SDATA (linker command file)
#>0080000C          ___DATA_END (linker command file)
#>0080000C          __SDA_BASE (linker command file)

# .bss
#>0080000C          ___BSS_START (linker command file)
#>0080000C          __START_SBSS (linker command file)
  0080000C 00000002 .sbss   ActualRatio	(testMotor_c.obj)
  0080000E 00000001 .sbss   EnUser	(testMotor_c.obj)
  0080000F 00000001 .sbss   BufferRead	(SerialCom_c.obj)
  00800010 00000001 .sbss   EnUser	(SerialCom_c.obj)
  00800011 00000001 .sbss   SerFlag	(SerialCom_c.obj)
  00800012 00000002 .sbss   ActualRatio	(S_TiltCamera_c.obj)
  00800014 00000002 .sbss   ActualRatio	(S_PanCamera_c.obj)
  00800016 00000002 .sbss   ActualRatio	(M4_ESC_c.obj)
  00800018 00000002 .sbss   ActualRatio	(M3_ESC_c.obj)
  0080001A 00000002 .sbss   ActualRatio	(M2_ESC_c.obj)
  0080001C 00000001 .sbss   SR_lock	(Cpu_c.obj)
  0080001E 00000002 .sbss   ADC_OutV	(ADC_c.obj)
  00800020 00000001 .sbss   ModeFlg	(ADC_c.obj)
  00800021 00000001 .sbss   OutFlg	(ADC_c.obj)
  00800022 00000001 .sbss   led0x00	(Events_c.obj)
  00800023 00000001 .sbss   led0x01	(Events_c.obj)
  00800024 00000001 .sbss   led0x02	(Events_c.obj)
  00800025 00000001 .sbss   tLed	(Events_c.obj)
  00800026 00000001 .sbss   tMotor	(Events_c.obj)
#>00800028          __END_SBSS (linker command file)
#>00800028          __START_BSS (linker command file)
  00800028 00000004 .bss    __global_destructor_chain	(librt.a cf_staticinitia)
#>0080002C          __END_BSS (linker command file)
#>0080002C          ___BSS_END (linker command file)

# .custom
#>0080002C          ___HEAP_START (linker command file)
#>0080002C          ___heap_addr (linker command file)
#>0080042C          ___HEAP_END (linker command file)
#>0080042C          ___SP_END (linker command file)
#>0080082C          ___SP_INIT (linker command file)
#>0080042C          ___mem_limit (linker command file)
#>00000010          ___stack_safety (linker command file)
#>0080082C          __SP_INIT (linker command file)
#>0080082C          ___SP_AFTER_RESET (linker command file)
#>000010E4          _romp_at (linker command file)

# .romp
#>000010E4          __S_romp (linker command file)


# Memory map:
  v_addr   p_addr   size     name
  00000000 00000000 0000019C .abs__InterruptVectorTable abs__InterruptVectorTable
  0000040D 0000040D 00000001 .abs_NVPROT_INIT abs_NVPROT_INIT
  0000040F 0000040F 00000001 .abs_NVOPT_INIT abs_NVOPT_INIT
  00000410 00000410 00000000 .code      code
  00000410 00000410 00000CC8 .text      code
  00800000 00800000 00000000 .userram   userram
  00800000 000010D8 0000000C .data      userram
  0080000C 0080000C 00000020 .bss       userram
  0080002C 0080002C 00000000 .custom    userram
  0080002C 000010E4 00000018 .romp      userram

# Link start time: Fri Jul 10 13:13:21 2015
# Link end time: Fri Jul 10 13:13:21 2015
